/**
 * Created by swagatb on 7/30/17.
 */
import java.util.*;
import java.lang.*;
/*
1) At every iteration ending with i, elements from index [0 to i] are sorted wrt to entire array
   elements from [i+1, n) are not yet seen -> This also means after ith iteration causes element at index i
   to be in its proper position.
2) Not a stable sort
   defn of stable sort - If 2 keys which are equal retain their places after sorting then its a stable sort.
   Consider array -> 5(1), 5(2), 2
   after the 1st iteration
   the array becomes -> 2, 5(2), 5(1)

3) Best, Worst, Avg case time compleexity - O(n^2)
4) Algorithm
   for(i = 0; i<n; i++)
   {
      minIndex = i;
      for(j=i+1; j<n; j++)
      {
        if(A[minIndex] < A[j])
          minIndex = j
      }
      swap(A, i, minIndex)
   }

                i
   a0, a1, a2, a3, a4, a5
   Sorted wrt      Unseen
   array

 */
public class SelectionSort {
}
